{"paragraphs":[{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469451767126_-1314946326","id":"20160725-130247_149071452","dateCreated":"Jul 25, 2016 1:02:47 PM","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:299","text":"%md\n\n### Text Analytics - Computing N-Grams and Wordcounts\n\n##### This notebook shows basic text analytics exploration such as word counts, n-gram extraction, and how to visualize these results within Zeppelin.","dateUpdated":"Jul 25, 2016 1:20:48 PM","dateFinished":"Jul 25, 2016 1:20:09 PM","dateStarted":"Jul 25, 2016 1:20:09 PM","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Text Analytics - Computing N-Grams and Wordcounts</h3>\n<h5>This notebook shows basic text analytics exploration such as word counts, n-gram extraction, and how to visualize these results within Zeppelin.</h5>\n"}},{"text":"%pyspark\nimport re\n\n##############################################################################################\n#\n#   Import data from HDFS\n#\n##############################################################################################\n\nrawdata = sc.textFile(\"hdfs://sandbox.hortonworks.com/tmp/airlines.csv\")\nheader  = rawdata.first()\ntext    = rawdata.filter(lambda x: x!=header).map(lambda x: x.split(',')[8])\n\n##############################################################################################\n#\n#   Stopwords\n#   This is a list of common/low-value words that you'd like excluded from the word counts\n#   You can customize this list and there are many packages out there that has a pre-defined\n#   list that you can start with (in addition to the short one I have listed below)\n#\n##############################################################################################\nstopwords_core = ['a', u'about', u'above', u'after', u'again', u'against', u'ain', u'all', u'am', u'an', u'and', u'any', u'are', u'aren', u'as', u'at', u'be', u'because',\n    u'been', u'before', u'being', u'below', u'between', u'both', u'but', u'by', u'can', 'come', u'could', u'd', u'did', u'didn', u'do', u'does', u'doesn', u'doing', u'don',\n    u'down', u'during', u'each', u'few', u'for', u'from', u'further', u'had', u'hadn', u'has', u'hasn', u'have', u'haven', u'having', u'he', u'her', u'here', u'hers', \n    u'herself', u'him', u'himself', u'his', u'how', u'i', u'if', u'in', u'into', u'is', u'isn', u'it', u'its', u'itself', u'just', u'll', u'm', u'ma', u'me', u'mightn',\n    u'more', u'most', u'mustn', u'my', u'myself', u'needn', u'no', u'nor', u'not', u'now', u'o', u'of', u'off', u'on', u'once', u'only', u'or', u'other', u'our', u'ours',\n    u'ourselves', u'out', u'over', u'own', u're', u's', u'same', u'shan', u'she', u'should', u'shouldn', u'so', u'some', u'such', u't', u'than', u'that', u'the', u'their',\n    u'theirs', u'them',u'themselves', u'then', u'there', u'these', u'they', u'this', u'those', u'through', u'to', u'too', u'under', u'until', u'up', u've', u'very', u'was',\n    u'wasnt', u'we', u'were',u'weren', u'what', u'when', u'where', u'which', u'while', u'who', u'whom', u'why', u'will', u'with', u'would', u'y', u'you', u'your',\n    u'yours', u'yourself',u'yourselves']\nstopwords_custom = ['']\nstopwords = stopwords_core + stopwords_custom\nstopwords = [word.lower() for word in stopwords]\n\nwords   = text.flatMap(lambda x: x.split(' '))                      \\\n              .map(lambda x: re.sub('[^a-zA-Z0-9]',' ',x).strip())  \\\n              .filter(lambda x: len(x) > 3)                         \\\n              .map(lambda x: (x.lower(), 1))                        \\\n              .reduceByKey(lambda x,y: x+y)                         \\\n              .map(lambda x: (x[1],x[0]))                           \\\n              .sortByKey(ascending=False)\n\nwords_clean = words.filter(lambda x: x[1] not in stopwords)\n\nprint '-----------------------------------\\r\\nRaw Word Count\\r\\n-----------------------------------'\nfor i in words.take(10):\n    print str(i)\n\nprint '\\r\\n'\nprint '-----------------------------------\\r\\nCleaned Word Count (no Stopwords)\\r\\n-----------------------------------'\nfor i in words_clean.take(10):\n    print str(i)\n\n# NOTE: This script does not deal with word stemming. If I introduced additional code for stemming, this could compress \"flight\" and \"flights\" into one term/entity.","dateUpdated":"Jul 25, 2016 1:15:29 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469210786871_-1723565913","id":"20160722-180626_100129288","result":{"code":"SUCCESS","type":"TEXT","msg":"-----------------------------------\r\nRaw Word Count\r\n-----------------------------------\n(2332, u'flight')\n(1275, u'were')\n(1212, u'with')\n(1098, u'that')\n(1005, u'they')\n(938, u'from')\n(715, u'have')\n(709, u'this')\n(582, u'time')\n(577, u'service')\n\r\n\n-----------------------------------\r\nCleaned Word Count (no Stopwords)\r\n-----------------------------------\n(2332, u'flight')\n(582, u'time')\n(577, u'service')\n(533, u'flights')\n(492, u'plane')\n(416, u'hours')\n(393, u'united')\n(382, u'seats')\n(369, u'delta')\n(365, u'first')\n"},"dateCreated":"Jul 22, 2016 6:06:26 PM","dateStarted":"Jul 25, 2016 1:06:38 PM","dateFinished":"Jul 25, 2016 1:07:33 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:150","focus":true},{"text":"%pyspark\n\n##############################################################################################\n#\n#   Convert RDD to PySpark DataFrame, modify header then load into SQL temp table\n#\n##############################################################################################\n\nwords_df = words_clean.toDF()\n\nwords_df = words_df.selectExpr(\"_1 as Word_Freq\",\"_2 as Word\")\n\nwords_df.show(10)\n\nwords_df.registerTempTable(\"words_table\")","dateUpdated":"Jul 25, 2016 1:13:49 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469215149901_2014583990","id":"20160722-191909_1278740777","result":{"code":"SUCCESS","type":"TEXT","msg":"+---------+-------+\n|Word_Freq|   Word|\n+---------+-------+\n|     2332| flight|\n|      582|   time|\n|      577|service|\n|      533|flights|\n|      492|  plane|\n|      416|  hours|\n|      393| united|\n|      382|  seats|\n|      369|  delta|\n|      365|  first|\n+---------+-------+\nonly showing top 10 rows\n\n"},"dateCreated":"Jul 22, 2016 7:19:09 PM","dateStarted":"Jul 25, 2016 1:13:49 PM","dateFinished":"Jul 25, 2016 1:13:52 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:151","focus":true},{"text":"%sql\n\nselect * from words_table limit 20","dateUpdated":"Jul 25, 2016 1:15:50 PM","config":{"colWidth":6,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"Word","index":1,"aggr":"sum"}],"values":[{"name":"Word_Freq","index":0,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"Word_Freq","index":0,"aggr":"sum"},"yAxis":{"name":"Word","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469211836857_1601563253","id":"20160722-182356_1547020916","result":{"code":"SUCCESS","type":"TABLE","msg":"Word_Freq\tWord\n2332\tflight\n582\ttime\n577\tservice\n533\tflights\n492\tplane\n417\twould\n416\thours\n393\tunited\n382\tseats\n369\tdelta\n365\tfirst\n351\tfood\n334\tseat\n332\tcrew\n319\thour\n310\tairline\n305\tstaff\n303\tgate\n297\tback\n296\tgood\n","comment":"","msgTable":[[{"key":"Word","value":"2332"},{"key":"Word","value":"flight"}],[{"value":"582"},{"value":"time"}],[{"value":"577"},{"value":"service"}],[{"value":"533"},{"value":"flights"}],[{"value":"492"},{"value":"plane"}],[{"value":"417"},{"value":"would"}],[{"value":"416"},{"value":"hours"}],[{"value":"393"},{"value":"united"}],[{"value":"382"},{"value":"seats"}],[{"value":"369"},{"value":"delta"}],[{"value":"365"},{"value":"first"}],[{"value":"351"},{"value":"food"}],[{"value":"334"},{"value":"seat"}],[{"value":"332"},{"value":"crew"}],[{"value":"319"},{"value":"hour"}],[{"value":"310"},{"value":"airline"}],[{"value":"305"},{"value":"staff"}],[{"value":"303"},{"value":"gate"}],[{"value":"297"},{"value":"back"}],[{"value":"296"},{"value":"good"}]],"columnNames":[{"name":"Word_Freq","index":0,"aggr":"sum"},{"name":"Word","index":1,"aggr":"sum"}],"rows":[["2332","flight"],["582","time"],["577","service"],["533","flights"],["492","plane"],["417","would"],["416","hours"],["393","united"],["382","seats"],["369","delta"],["365","first"],["351","food"],["334","seat"],["332","crew"],["319","hour"],["310","airline"],["305","staff"],["303","gate"],["297","back"],["296","good"]]},"dateCreated":"Jul 22, 2016 6:23:56 PM","dateStarted":"Jul 22, 2016 7:40:01 PM","dateFinished":"Jul 22, 2016 7:40:01 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:152"},{"text":"%sql\n\nselect * from words_table limit 25","dateUpdated":"Jul 25, 2016 1:16:10 PM","config":{"colWidth":6,"graph":{"mode":"pieChart","height":300,"optionOpen":false,"keys":[{"name":"Word","index":1,"aggr":"sum"}],"values":[{"name":"Word_Freq","index":0,"aggr":"avg"}],"groups":[],"scatter":{"xAxis":{"name":"Word_Freq","index":0,"aggr":"sum"},"yAxis":{"name":"Word","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469214331619_246833896","id":"20160722-190531_584933778","result":{"code":"SUCCESS","type":"TABLE","msg":"Word_Freq\tWord\n2332\tflight\n582\ttime\n577\tservice\n533\tflights\n492\tplane\n416\thours\n393\tunited\n382\tseats\n369\tdelta\n365\tfirst\n351\tfood\n334\tseat\n332\tcrew\n319\thour\n310\tairline\n305\tstaff\n303\tgate\n297\tback\n296\tgood\n295\tdelayed\n294\ttold\n284\tairport\n272\tflew\n252\tclass\n249\tnext\n","comment":"","msgTable":[[{"key":"Word","value":"2332"},{"key":"Word","value":"flight"}],[{"value":"582"},{"value":"time"}],[{"value":"577"},{"value":"service"}],[{"value":"533"},{"value":"flights"}],[{"value":"492"},{"value":"plane"}],[{"value":"416"},{"value":"hours"}],[{"value":"393"},{"value":"united"}],[{"value":"382"},{"value":"seats"}],[{"value":"369"},{"value":"delta"}],[{"value":"365"},{"value":"first"}],[{"value":"351"},{"value":"food"}],[{"value":"334"},{"value":"seat"}],[{"value":"332"},{"value":"crew"}],[{"value":"319"},{"value":"hour"}],[{"value":"310"},{"value":"airline"}],[{"value":"305"},{"value":"staff"}],[{"value":"303"},{"value":"gate"}],[{"value":"297"},{"value":"back"}],[{"value":"296"},{"value":"good"}],[{"value":"295"},{"value":"delayed"}],[{"value":"294"},{"value":"told"}],[{"value":"284"},{"value":"airport"}],[{"value":"272"},{"value":"flew"}],[{"value":"252"},{"value":"class"}],[{"value":"249"},{"value":"next"}]],"columnNames":[{"name":"Word_Freq","index":0,"aggr":"sum"},{"name":"Word","index":1,"aggr":"sum"}],"rows":[["2332","flight"],["582","time"],["577","service"],["533","flights"],["492","plane"],["416","hours"],["393","united"],["382","seats"],["369","delta"],["365","first"],["351","food"],["334","seat"],["332","crew"],["319","hour"],["310","airline"],["305","staff"],["303","gate"],["297","back"],["296","good"],["295","delayed"],["294","told"],["284","airport"],["272","flew"],["252","class"],["249","next"]]},"dateCreated":"Jul 22, 2016 7:05:31 PM","dateStarted":"Jul 25, 2016 1:16:10 PM","dateFinished":"Jul 25, 2016 1:16:12 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:153","focus":true},{"text":"%pyspark\n\n##############################################################################################\n#\n#   Extract Bigrams\n#\n##############################################################################################\n\nbigrams = text.map(lambda x:x.split(' ')) \\\n    .flatMap(lambda x: [(x[i]+' '+x[i+1],1) for i in range(0,len(x)-1)])\n\nbigram_freq = bigrams.reduceByKey(lambda x,y: x+y)  \\\n    .map(lambda x: [x[1], x[0]])                    \\\n    .sortByKey(ascending=False)\n\nfor i in bigram_freq.take(10):\n    print i","dateUpdated":"Jul 23, 2016 8:36:53 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469305517466_-218600954","id":"20160723-202517_520944142","result":{"code":"SUCCESS","type":"TEXT","msg":"(451, u'on the')\n(349, u'I was')\n(334, u'in the')\n(332, u'to the')\n(324, u'of the')\n(306, u'the flight')\n(267, u'at the')\n(263, u'flight was')\n(231, u'we were')\n(231, u'had to')\n"},"dateCreated":"Jul 23, 2016 8:25:17 PM","dateStarted":"Jul 23, 2016 8:36:53 PM","dateFinished":"Jul 23, 2016 8:36:54 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:154"},{"text":"%pyspark\n\n##############################################################################################\n#\n#   Extract N-Grams\n#\n##############################################################################################\n\ndef find_ngrams(list, n):\n   return zip(*[list[i:] for i in range(n)])\n\nngrams = text.map(lambda x: x.split(' '))               \\\n              .flatMap(lambda x: find_ngrams(x, 4))     \\\n              .map(lambda x: (x,1))                     \\\n              .reduceByKey(lambda x,y: x+y)             \\\n              .map(lambda x: [x[1],x[0]])               \\\n              .sortByKey(ascending=False)\n\nfor i in ngrams.take(15):\n    print i","dateUpdated":"Jul 25, 2016 1:17:49 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469216437637_-1751084835","id":"20160722-194037_533043815","result":{"code":"SUCCESS","type":"TEXT","msg":"(35, (u'I', u'will', u'never', u'fly'))\n(17, (u'will', u'never', u'fly', u'with'))\n(14, (u'I', u'was', u'able', u'to'))\n(13, (u'On', u'the', u'way', u'back'))\n(13, (u'have', u'to', u'pay', u'for'))\n(13, (u'arrived', u'at', u'the', u'airport'))\n(12, (u'I', u'will', u'not', u'fly'))\n(12, (u'on', u'the', u'plane', u'and'))\n(12, (u'seat', u'in', u'front', u'of'))\n(11, (u'the', u'seat', u'in', u'front'))\n(11, (u'in', u'front', u'of', u'me'))\n(11, (u'we', u'had', u'to', u'wait'))\n(11, (u'on', u'a', u'flight', u'to'))\n(11, (u'on', u'the', u'runway', u'for'))\n(11, (u'I', u'arrived', u'at', u'the'))\n"},"dateCreated":"Jul 22, 2016 7:40:37 PM","dateStarted":"Jul 25, 2016 1:17:49 PM","dateFinished":"Jul 25, 2016 1:17:53 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:155","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469311647029_-1223648877","id":"20160723-220727_1142811407","dateCreated":"Jul 23, 2016 10:07:27 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:156","dateUpdated":"Jul 25, 2016 1:20:29 PM","dateFinished":"Jul 25, 2016 1:20:26 PM","dateStarted":"Jul 25, 2016 1:20:26 PM","result":{"code":"SUCCESS","type":"HTML","msg":"<h5>Dan Zaratsian - July 2016</h5>\n"},"text":"%md\n\n##### Dan Zaratsian - July 2016","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1469452826747_1396877769","id":"20160725-132026_905890300","dateCreated":"Jul 25, 2016 1:20:26 PM","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:420"}],"name":"z_TextAnalytics_Wordcount","id":"2BR41SQV5","angularObjects":{"2BQ9Y66FH":[],"2BRP5663K":[],"2BTGEXB4E":[],"2BSQWXCH6":[],"2BTMKA19Z":[],"2BTR1A48W":[],"2BQJ6U96F":[],"2BSPSGWCB":[],"2BS87HHBV":[],"2BSQWMA8N":[],"2BRF6H8MG":[],"2BS2FND5T":[],"2BT4F2H1E":[]},"config":{"looknfeel":"default"},"info":{}}